/**
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Process from './Process';
import ProcessStartEvents from './ProcessStartEvents';
import ProcessWithStartEventsAllOf from './ProcessWithStartEventsAllOf';

/**
 * The ProcessWithStartEvents model module.
 * @module model/ProcessWithStartEvents
 * @version 1.0.0
 */
class ProcessWithStartEvents {
    /**
     * Constructs a new <code>ProcessWithStartEvents</code>.
     * @alias module:model/ProcessWithStartEvents
     * @implements module:model/ProcessWithStartEventsAllOf
     * @implements module:model/Process
     */
    constructor() { 
        ProcessWithStartEventsAllOf.initialize(this);Process.initialize(this);
        ProcessWithStartEvents.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProcessWithStartEvents</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProcessWithStartEvents} obj Optional instance to populate.
     * @return {module:model/ProcessWithStartEvents} The populated <code>ProcessWithStartEvents</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProcessWithStartEvents();
            ProcessWithStartEventsAllOf.constructFromObject(data, obj);
            Process.constructFromObject(data, obj);

            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], [ProcessStartEvents]);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'Date');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('notifications')) {
                obj['notifications'] = ApiClient.convertToType(data['notifications'], Object);
            }
            if (data.hasOwnProperty('task_notifications')) {
                obj['task_notifications'] = ApiClient.convertToType(data['task_notifications'], Object);
            }
            if (data.hasOwnProperty('process_category_id')) {
                obj['process_category_id'] = ApiClient.convertToType(data['process_category_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('pause_timer_start')) {
                obj['pause_timer_start'] = ApiClient.convertToType(data['pause_timer_start'], 'Number');
            }
            if (data.hasOwnProperty('cancel_screen_id')) {
                obj['cancel_screen_id'] = ApiClient.convertToType(data['cancel_screen_id'], 'Number');
            }
            if (data.hasOwnProperty('has_timer_start_events')) {
                obj['has_timer_start_events'] = ApiClient.convertToType(data['has_timer_start_events'], 'Boolean');
            }
            if (data.hasOwnProperty('request_detail_screen_id')) {
                obj['request_detail_screen_id'] = ApiClient.convertToType(data['request_detail_screen_id'], 'Number');
            }
            if (data.hasOwnProperty('is_valid')) {
                obj['is_valid'] = ApiClient.convertToType(data['is_valid'], 'Number');
            }
            if (data.hasOwnProperty('package_key')) {
                obj['package_key'] = ApiClient.convertToType(data['package_key'], 'String');
            }
            if (data.hasOwnProperty('start_events')) {
                obj['start_events'] = ApiClient.convertToType(data['start_events'], [ProcessStartEvents]);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], 'String');
            }
            if (data.hasOwnProperty('self_service_tasks')) {
                obj['self_service_tasks'] = ApiClient.convertToType(data['self_service_tasks'], Object);
            }
            if (data.hasOwnProperty('signal_events')) {
                obj['signal_events'] = ApiClient.convertToType(data['signal_events'], [Object]);
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], Object);
            }
            if (data.hasOwnProperty('manager_id')) {
                obj['manager_id'] = ApiClient.convertToType(data['manager_id'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/ProcessStartEvents>} events
 */
ProcessWithStartEvents.prototype['events'] = undefined;

/**
 * @member {Number} user_id
 */
ProcessWithStartEvents.prototype['user_id'] = undefined;

/**
 * @member {String} id
 */
ProcessWithStartEvents.prototype['id'] = undefined;

/**
 * @member {Date} deleted_at
 */
ProcessWithStartEvents.prototype['deleted_at'] = undefined;

/**
 * @member {Date} created_at
 */
ProcessWithStartEvents.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
ProcessWithStartEvents.prototype['updated_at'] = undefined;

/**
 * @member {Object} notifications
 */
ProcessWithStartEvents.prototype['notifications'] = undefined;

/**
 * @member {Object} task_notifications
 */
ProcessWithStartEvents.prototype['task_notifications'] = undefined;

/**
 * @member {Number} process_category_id
 */
ProcessWithStartEvents.prototype['process_category_id'] = undefined;

/**
 * @member {String} name
 */
ProcessWithStartEvents.prototype['name'] = undefined;

/**
 * @member {String} description
 */
ProcessWithStartEvents.prototype['description'] = undefined;

/**
 * @member {module:model/ProcessWithStartEvents.StatusEnum} status
 */
ProcessWithStartEvents.prototype['status'] = undefined;

/**
 * @member {Number} pause_timer_start
 */
ProcessWithStartEvents.prototype['pause_timer_start'] = undefined;

/**
 * @member {Number} cancel_screen_id
 */
ProcessWithStartEvents.prototype['cancel_screen_id'] = undefined;

/**
 * @member {Boolean} has_timer_start_events
 */
ProcessWithStartEvents.prototype['has_timer_start_events'] = undefined;

/**
 * @member {Number} request_detail_screen_id
 */
ProcessWithStartEvents.prototype['request_detail_screen_id'] = undefined;

/**
 * @member {Number} is_valid
 */
ProcessWithStartEvents.prototype['is_valid'] = undefined;

/**
 * @member {String} package_key
 */
ProcessWithStartEvents.prototype['package_key'] = undefined;

/**
 * @member {Array.<module:model/ProcessStartEvents>} start_events
 */
ProcessWithStartEvents.prototype['start_events'] = undefined;

/**
 * @member {String} warnings
 */
ProcessWithStartEvents.prototype['warnings'] = undefined;

/**
 * @member {Object} self_service_tasks
 */
ProcessWithStartEvents.prototype['self_service_tasks'] = undefined;

/**
 * @member {Array.<Object>} signal_events
 */
ProcessWithStartEvents.prototype['signal_events'] = undefined;

/**
 * @member {Object} category
 */
ProcessWithStartEvents.prototype['category'] = undefined;

/**
 * @member {Number} manager_id
 */
ProcessWithStartEvents.prototype['manager_id'] = undefined;


// Implement ProcessWithStartEventsAllOf interface:
/**
 * @member {Array.<module:model/ProcessStartEvents>} events
 */
ProcessWithStartEventsAllOf.prototype['events'] = undefined;
// Implement Process interface:
/**
 * @member {Number} user_id
 */
Process.prototype['user_id'] = undefined;
/**
 * @member {String} id
 */
Process.prototype['id'] = undefined;
/**
 * @member {Date} deleted_at
 */
Process.prototype['deleted_at'] = undefined;
/**
 * @member {Date} created_at
 */
Process.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
Process.prototype['updated_at'] = undefined;
/**
 * @member {Object} notifications
 */
Process.prototype['notifications'] = undefined;
/**
 * @member {Object} task_notifications
 */
Process.prototype['task_notifications'] = undefined;
/**
 * @member {Number} process_category_id
 */
Process.prototype['process_category_id'] = undefined;
/**
 * @member {String} name
 */
Process.prototype['name'] = undefined;
/**
 * @member {String} description
 */
Process.prototype['description'] = undefined;
/**
 * @member {module:model/Process.StatusEnum} status
 */
Process.prototype['status'] = undefined;
/**
 * @member {Number} pause_timer_start
 */
Process.prototype['pause_timer_start'] = undefined;
/**
 * @member {Number} cancel_screen_id
 */
Process.prototype['cancel_screen_id'] = undefined;
/**
 * @member {Boolean} has_timer_start_events
 */
Process.prototype['has_timer_start_events'] = undefined;
/**
 * @member {Number} request_detail_screen_id
 */
Process.prototype['request_detail_screen_id'] = undefined;
/**
 * @member {Number} is_valid
 */
Process.prototype['is_valid'] = undefined;
/**
 * @member {String} package_key
 */
Process.prototype['package_key'] = undefined;
/**
 * @member {Array.<module:model/ProcessStartEvents>} start_events
 */
Process.prototype['start_events'] = undefined;
/**
 * @member {String} warnings
 */
Process.prototype['warnings'] = undefined;
/**
 * @member {Object} self_service_tasks
 */
Process.prototype['self_service_tasks'] = undefined;
/**
 * @member {Array.<Object>} signal_events
 */
Process.prototype['signal_events'] = undefined;
/**
 * @member {Object} category
 */
Process.prototype['category'] = undefined;
/**
 * @member {Number} manager_id
 */
Process.prototype['manager_id'] = undefined;



/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ProcessWithStartEvents['StatusEnum'] = {

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE",

    /**
     * value: "ARCHIVED"
     * @const
     */
    "ARCHIVED": "ARCHIVED"
};



export default ProcessWithStartEvents;

