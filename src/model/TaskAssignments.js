/**
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskAssignmentsAllOf from './TaskAssignmentsAllOf';
import TaskAssignmentsEditable from './TaskAssignmentsEditable';

/**
 * The TaskAssignments model module.
 * @module model/TaskAssignments
 * @version 1.0.0
 */
class TaskAssignments {
    /**
     * Constructs a new <code>TaskAssignments</code>.
     * Represents a business process task assignment definition.
     * @alias module:model/TaskAssignments
     * @implements module:model/TaskAssignmentsAllOf
     * @implements module:model/TaskAssignmentsEditable
     */
    constructor() { 
        TaskAssignmentsAllOf.initialize(this);TaskAssignmentsEditable.initialize(this);
        TaskAssignments.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskAssignments</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskAssignments} obj Optional instance to populate.
     * @return {module:model/TaskAssignments} The populated <code>TaskAssignments</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskAssignments();
            TaskAssignmentsAllOf.constructFromObject(data, obj);
            TaskAssignmentsEditable.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('process_id')) {
                obj['process_id'] = ApiClient.convertToType(data['process_id'], 'Number');
            }
            if (data.hasOwnProperty('process_task_id')) {
                obj['process_task_id'] = ApiClient.convertToType(data['process_task_id'], 'String');
            }
            if (data.hasOwnProperty('assignment_id')) {
                obj['assignment_id'] = ApiClient.convertToType(data['assignment_id'], 'Number');
            }
            if (data.hasOwnProperty('assignment_type')) {
                obj['assignment_type'] = ApiClient.convertToType(data['assignment_type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
TaskAssignments.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
TaskAssignments.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
TaskAssignments.prototype['updated_at'] = undefined;

/**
 * @member {Number} process_id
 */
TaskAssignments.prototype['process_id'] = undefined;

/**
 * @member {String} process_task_id
 */
TaskAssignments.prototype['process_task_id'] = undefined;

/**
 * @member {Number} assignment_id
 */
TaskAssignments.prototype['assignment_id'] = undefined;

/**
 * @member {module:model/TaskAssignments.AssignmentTypeEnum} assignment_type
 */
TaskAssignments.prototype['assignment_type'] = undefined;


// Implement TaskAssignmentsAllOf interface:
/**
 * @member {Number} id
 */
TaskAssignmentsAllOf.prototype['id'] = undefined;
/**
 * @member {Date} created_at
 */
TaskAssignmentsAllOf.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
TaskAssignmentsAllOf.prototype['updated_at'] = undefined;
// Implement TaskAssignmentsEditable interface:
/**
 * @member {Number} process_id
 */
TaskAssignmentsEditable.prototype['process_id'] = undefined;
/**
 * @member {String} process_task_id
 */
TaskAssignmentsEditable.prototype['process_task_id'] = undefined;
/**
 * @member {Number} assignment_id
 */
TaskAssignmentsEditable.prototype['assignment_id'] = undefined;
/**
 * @member {module:model/TaskAssignmentsEditable.AssignmentTypeEnum} assignment_type
 */
TaskAssignmentsEditable.prototype['assignment_type'] = undefined;



/**
 * Allowed values for the <code>assignment_type</code> property.
 * @enum {String}
 * @readonly
 */
TaskAssignments['AssignmentTypeEnum'] = {

    /**
     * value: "ProcessMaker\\Models\\User"
     * @const
     */
    "User": "ProcessMaker\\Models\\User",

    /**
     * value: "ProcessMaker\\Models\\Group"
     * @const
     */
    "Group": "ProcessMaker\\Models\\Group"
};



export default TaskAssignments;

