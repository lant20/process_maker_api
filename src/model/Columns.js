/**
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Columns model module.
 * @module model/Columns
 * @version 1.0.0
 */
class Columns {
    /**
     * Constructs a new <code>Columns</code>.
     * @alias module:model/Columns
     */
    constructor() { 
        
        Columns.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Columns</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Columns} obj Optional instance to populate.
     * @return {module:model/Columns} The populated <code>Columns</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Columns();

            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
            if (data.hasOwnProperty('sortable')) {
                obj['sortable'] = ApiClient.convertToType(data['sortable'], 'Boolean');
            }
            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('mask')) {
                obj['mask'] = ApiClient.convertToType(data['mask'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} label
 */
Columns.prototype['label'] = undefined;

/**
 * @member {String} field
 */
Columns.prototype['field'] = undefined;

/**
 * @member {Boolean} sortable
 */
Columns.prototype['sortable'] = undefined;

/**
 * @member {Boolean} default
 */
Columns.prototype['default'] = undefined;

/**
 * @member {String} format
 */
Columns.prototype['format'] = undefined;

/**
 * @member {String} mask
 */
Columns.prototype['mask'] = undefined;






export default Columns;

