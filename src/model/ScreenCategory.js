/**
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GroupMembersAllOf from './GroupMembersAllOf';
import ScreenCategoryEditable from './ScreenCategoryEditable';

/**
 * The ScreenCategory model module.
 * @module model/ScreenCategory
 * @version 1.0.0
 */
class ScreenCategory {
    /**
     * Constructs a new <code>ScreenCategory</code>.
     * Represents a business screen category definition.
     * @alias module:model/ScreenCategory
     * @implements module:model/GroupMembersAllOf
     * @implements module:model/ScreenCategoryEditable
     */
    constructor() { 
        GroupMembersAllOf.initialize(this);ScreenCategoryEditable.initialize(this);
        ScreenCategory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScreenCategory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScreenCategory} obj Optional instance to populate.
     * @return {module:model/ScreenCategory} The populated <code>ScreenCategory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScreenCategory();
            GroupMembersAllOf.constructFromObject(data, obj);
            ScreenCategoryEditable.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
ScreenCategory.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
ScreenCategory.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
ScreenCategory.prototype['updated_at'] = undefined;

/**
 * @member {String} name
 */
ScreenCategory.prototype['name'] = undefined;

/**
 * @member {module:model/ScreenCategory.StatusEnum} status
 */
ScreenCategory.prototype['status'] = undefined;


// Implement GroupMembersAllOf interface:
/**
 * @member {String} id
 */
GroupMembersAllOf.prototype['id'] = undefined;
/**
 * @member {Date} created_at
 */
GroupMembersAllOf.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
GroupMembersAllOf.prototype['updated_at'] = undefined;
// Implement ScreenCategoryEditable interface:
/**
 * @member {String} name
 */
ScreenCategoryEditable.prototype['name'] = undefined;
/**
 * @member {module:model/ScreenCategoryEditable.StatusEnum} status
 */
ScreenCategoryEditable.prototype['status'] = undefined;



/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ScreenCategory['StatusEnum'] = {

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE"
};



export default ScreenCategory;

