/**
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SignalsAllOf from './SignalsAllOf';
import SignalsAllOfProcesses from './SignalsAllOfProcesses';
import SignalsEditable from './SignalsEditable';

/**
 * The Signals model module.
 * @module model/Signals
 * @version 1.0.0
 */
class Signals {
    /**
     * Constructs a new <code>Signals</code>.
     * Represents a business signal definition.
     * @alias module:model/Signals
     * @implements module:model/SignalsAllOf
     * @implements module:model/SignalsEditable
     */
    constructor() { 
        SignalsAllOf.initialize(this);SignalsEditable.initialize(this);
        Signals.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Signals</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Signals} obj Optional instance to populate.
     * @return {module:model/Signals} The populated <code>Signals</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Signals();
            SignalsAllOf.constructFromObject(data, obj);
            SignalsEditable.constructFromObject(data, obj);

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('processes')) {
                obj['processes'] = ApiClient.convertToType(data['processes'], [SignalsAllOfProcesses]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} type
 */
Signals.prototype['type'] = undefined;

/**
 * @member {Array.<module:model/SignalsAllOfProcesses>} processes
 */
Signals.prototype['processes'] = undefined;

/**
 * @member {String} id
 */
Signals.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Signals.prototype['name'] = undefined;

/**
 * @member {String} detail
 */
Signals.prototype['detail'] = undefined;


// Implement SignalsAllOf interface:
/**
 * @member {String} type
 */
SignalsAllOf.prototype['type'] = undefined;
/**
 * @member {Array.<module:model/SignalsAllOfProcesses>} processes
 */
SignalsAllOf.prototype['processes'] = undefined;
// Implement SignalsEditable interface:
/**
 * @member {String} id
 */
SignalsEditable.prototype['id'] = undefined;
/**
 * @member {String} name
 */
SignalsEditable.prototype['name'] = undefined;
/**
 * @member {String} detail
 */
SignalsEditable.prototype['detail'] = undefined;




export default Signals;

