/**
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GroupMembersAllOf from './GroupMembersAllOf';
import ScreensEditable from './ScreensEditable';

/**
 * The Screens model module.
 * @module model/Screens
 * @version 1.0.0
 */
class Screens {
    /**
     * Constructs a new <code>Screens</code>.
     * @alias module:model/Screens
     * @implements module:model/GroupMembersAllOf
     * @implements module:model/ScreensEditable
     */
    constructor() { 
        GroupMembersAllOf.initialize(this);ScreensEditable.initialize(this);
        Screens.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Screens</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Screens} obj Optional instance to populate.
     * @return {module:model/Screens} The populated <code>Screens</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Screens();
            GroupMembersAllOf.constructFromObject(data, obj);
            ScreensEditable.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiClient.convertToType(data['config'], [Object]);
            }
            if (data.hasOwnProperty('computed')) {
                obj['computed'] = ApiClient.convertToType(data['computed'], [Object]);
            }
            if (data.hasOwnProperty('watchers')) {
                obj['watchers'] = ApiClient.convertToType(data['watchers'], [Object]);
            }
            if (data.hasOwnProperty('custom_css')) {
                obj['custom_css'] = ApiClient.convertToType(data['custom_css'], 'String');
            }
            if (data.hasOwnProperty('screen_category_id')) {
                obj['screen_category_id'] = ApiClient.convertToType(data['screen_category_id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Screens.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
Screens.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
Screens.prototype['updated_at'] = undefined;

/**
 * @member {String} title
 */
Screens.prototype['title'] = undefined;

/**
 * @member {String} type
 */
Screens.prototype['type'] = undefined;

/**
 * @member {String} description
 */
Screens.prototype['description'] = undefined;

/**
 * @member {Array.<Object>} config
 */
Screens.prototype['config'] = undefined;

/**
 * @member {Array.<Object>} computed
 */
Screens.prototype['computed'] = undefined;

/**
 * @member {Array.<Object>} watchers
 */
Screens.prototype['watchers'] = undefined;

/**
 * @member {String} custom_css
 */
Screens.prototype['custom_css'] = undefined;

/**
 * @member {String} screen_category_id
 */
Screens.prototype['screen_category_id'] = undefined;


// Implement GroupMembersAllOf interface:
/**
 * @member {String} id
 */
GroupMembersAllOf.prototype['id'] = undefined;
/**
 * @member {Date} created_at
 */
GroupMembersAllOf.prototype['created_at'] = undefined;
/**
 * @member {Date} updated_at
 */
GroupMembersAllOf.prototype['updated_at'] = undefined;
// Implement ScreensEditable interface:
/**
 * @member {String} title
 */
ScreensEditable.prototype['title'] = undefined;
/**
 * @member {String} type
 */
ScreensEditable.prototype['type'] = undefined;
/**
 * @member {String} description
 */
ScreensEditable.prototype['description'] = undefined;
/**
 * @member {Array.<Object>} config
 */
ScreensEditable.prototype['config'] = undefined;
/**
 * @member {Array.<Object>} computed
 */
ScreensEditable.prototype['computed'] = undefined;
/**
 * @member {Array.<Object>} watchers
 */
ScreensEditable.prototype['watchers'] = undefined;
/**
 * @member {String} custom_css
 */
ScreensEditable.prototype['custom_css'] = undefined;
/**
 * @member {String} screen_category_id
 */
ScreensEditable.prototype['screen_category_id'] = undefined;




export default Screens;

