/**
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SettingsEditable model module.
 * @module model/SettingsEditable
 * @version 1.0.0
 */
class SettingsEditable {
    /**
     * Constructs a new <code>SettingsEditable</code>.
     * @alias module:model/SettingsEditable
     */
    constructor() { 
        
        SettingsEditable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SettingsEditable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SettingsEditable} obj Optional instance to populate.
     * @return {module:model/SettingsEditable} The populated <code>SettingsEditable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SettingsEditable();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiClient.convertToType(data['config'], [Object]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('helper')) {
                obj['helper'] = ApiClient.convertToType(data['helper'], 'String');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('hidden')) {
                obj['hidden'] = ApiClient.convertToType(data['hidden'], 'Boolean');
            }
            if (data.hasOwnProperty('readonly')) {
                obj['readonly'] = ApiClient.convertToType(data['readonly'], 'Boolean');
            }
            if (data.hasOwnProperty('variables')) {
                obj['variables'] = ApiClient.convertToType(data['variables'], 'String');
            }
            if (data.hasOwnProperty('sansSerifFont')) {
                obj['sansSerifFont'] = ApiClient.convertToType(data['sansSerifFont'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} key
 */
SettingsEditable.prototype['key'] = undefined;

/**
 * @member {Array.<Object>} config
 */
SettingsEditable.prototype['config'] = undefined;

/**
 * @member {String} name
 */
SettingsEditable.prototype['name'] = undefined;

/**
 * @member {String} helper
 */
SettingsEditable.prototype['helper'] = undefined;

/**
 * @member {String} group
 */
SettingsEditable.prototype['group'] = undefined;

/**
 * @member {String} format
 */
SettingsEditable.prototype['format'] = undefined;

/**
 * @member {Boolean} hidden
 */
SettingsEditable.prototype['hidden'] = undefined;

/**
 * @member {Boolean} readonly
 */
SettingsEditable.prototype['readonly'] = undefined;

/**
 * @member {String} variables
 */
SettingsEditable.prototype['variables'] = undefined;

/**
 * @member {String} sansSerifFont
 */
SettingsEditable.prototype['sansSerifFont'] = undefined;






export default SettingsEditable;

