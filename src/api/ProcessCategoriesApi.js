/**
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineResponse2008 from '../model/InlineResponse2008';
import Process from '../model/Process';
import ProcessCategory from '../model/ProcessCategory';
import ProcessCategoryEditable from '../model/ProcessCategoryEditable';

/**
* ProcessCategories service.
* @module api/ProcessCategoriesApi
* @version 1.0.0
*/
export default class ProcessCategoriesApi {

    /**
    * Constructs a new ProcessCategoriesApi. 
    * @alias module:api/ProcessCategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createProcessCategory operation.
     * @callback module:api/ProcessCategoriesApi~createProcessCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProcessCategory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Save a new process Category
     * Store a newly created Process Category in storage
     * @param {module:model/ProcessCategoryEditable} processCategoryEditable 
     * @param {module:api/ProcessCategoriesApi~createProcessCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProcessCategory}
     */
    createProcessCategory(processCategoryEditable, callback) {
      let postBody = processCategoryEditable;
      // verify the required parameter 'processCategoryEditable' is set
      if (processCategoryEditable === undefined || processCategoryEditable === null) {
        throw new Error("Missing the required parameter 'processCategoryEditable' when calling createProcessCategory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pm_api_auth_code', 'pm_api_bearer', 'pm_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProcessCategory;
      return this.apiClient.callApi(
        '/process_categories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteProcessCategory operation.
     * @callback module:api/ProcessCategoriesApi~deleteProcessCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Process} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a process category
     * Remove the specified resource from storage.
     * @param {Number} processCategoryId ID of process category to return
     * @param {module:api/ProcessCategoriesApi~deleteProcessCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Process}
     */
    deleteProcessCategory(processCategoryId, callback) {
      let postBody = null;
      // verify the required parameter 'processCategoryId' is set
      if (processCategoryId === undefined || processCategoryId === null) {
        throw new Error("Missing the required parameter 'processCategoryId' when calling deleteProcessCategory");
      }

      let pathParams = {
        'process_category_id': processCategoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pm_api_auth_code', 'pm_api_bearer', 'pm_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Process;
      return this.apiClient.callApi(
        '/process_categories/{process_category_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProcessCategories operation.
     * @callback module:api/ProcessCategoriesApi~getProcessCategoriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2008} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all processes categories that the user has access to
     * Display a listing of the Process Categories.
     * @param {Object} opts Optional parameters
     * @param {String} opts.filter Filter results by string. Searches Name and Status. All fields must match exactly.
     * @param {String} opts.orderBy Field to order results by
     * @param {module:model/String} opts.orderDirection  (default to 'asc')
     * @param {Number} opts.perPage 
     * @param {module:api/ProcessCategoriesApi~getProcessCategoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2008}
     */
    getProcessCategories(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter': opts['filter'],
        'order_by': opts['orderBy'],
        'order_direction': opts['orderDirection'],
        'per_page': opts['perPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pm_api_auth_code', 'pm_api_bearer', 'pm_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2008;
      return this.apiClient.callApi(
        '/process_categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProcessCategoryById operation.
     * @callback module:api/ProcessCategoriesApi~getProcessCategoryByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProcessCategory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get single process category by ID
     * Display the specified Process category.
     * @param {Number} processCategoryId ID of process category to return
     * @param {module:api/ProcessCategoriesApi~getProcessCategoryByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProcessCategory}
     */
    getProcessCategoryById(processCategoryId, callback) {
      let postBody = null;
      // verify the required parameter 'processCategoryId' is set
      if (processCategoryId === undefined || processCategoryId === null) {
        throw new Error("Missing the required parameter 'processCategoryId' when calling getProcessCategoryById");
      }

      let pathParams = {
        'process_category_id': processCategoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pm_api_auth_code', 'pm_api_bearer', 'pm_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProcessCategory;
      return this.apiClient.callApi(
        '/process_categories/{process_category_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateProcessCategory operation.
     * @callback module:api/ProcessCategoriesApi~updateProcessCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProcessCategory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a process Category
     * Updates the current element
     * @param {Number} processCategoryId ID of process category to return
     * @param {module:model/ProcessCategoryEditable} processCategoryEditable 
     * @param {module:api/ProcessCategoriesApi~updateProcessCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProcessCategory}
     */
    updateProcessCategory(processCategoryId, processCategoryEditable, callback) {
      let postBody = processCategoryEditable;
      // verify the required parameter 'processCategoryId' is set
      if (processCategoryId === undefined || processCategoryId === null) {
        throw new Error("Missing the required parameter 'processCategoryId' when calling updateProcessCategory");
      }
      // verify the required parameter 'processCategoryEditable' is set
      if (processCategoryEditable === undefined || processCategoryEditable === null) {
        throw new Error("Missing the required parameter 'processCategoryEditable' when calling updateProcessCategory");
      }

      let pathParams = {
        'process_category_id': processCategoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pm_api_auth_code', 'pm_api_bearer', 'pm_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProcessCategory;
      return this.apiClient.callApi(
        '/process_categories/{process_category_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
