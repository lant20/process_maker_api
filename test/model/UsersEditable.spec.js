/**
 * ProcessMaker API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProcessMakerApi);
  }
}(this, function(expect, ProcessMakerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProcessMakerApi.UsersEditable();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersEditable', function() {
    it('should create an instance of UsersEditable', function() {
      // uncomment below and update the code to test UsersEditable
      //var instane = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be.a(ProcessMakerApi.UsersEditable);
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property firstname (base name: "firstname")', function() {
      // uncomment below and update the code to test the property firstname
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property lastname (base name: "lastname")', function() {
      // uncomment below and update the code to test the property lastname
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property postal (base name: "postal")', function() {
      // uncomment below and update the code to test the property postal
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property fax (base name: "fax")', function() {
      // uncomment below and update the code to test the property fax
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property cell (base name: "cell")', function() {
      // uncomment below and update the code to test the property cell
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property datetimeFormat (base name: "datetime_format")', function() {
      // uncomment below and update the code to test the property datetimeFormat
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property isAdministrator (base name: "is_administrator")', function() {
      // uncomment below and update the code to test the property isAdministrator
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property expiresAt (base name: "expires_at")', function() {
      // uncomment below and update the code to test the property expiresAt
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property loggedinAt (base name: "loggedin_at")', function() {
      // uncomment below and update the code to test the property loggedinAt
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property rememberToken (base name: "remember_token")', function() {
      // uncomment below and update the code to test the property rememberToken
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property fullname (base name: "fullname")', function() {
      // uncomment below and update the code to test the property fullname
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property avatar (base name: "avatar")', function() {
      // uncomment below and update the code to test the property avatar
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property media (base name: "media")', function() {
      // uncomment below and update the code to test the property media
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property birthdate (base name: "birthdate")', function() {
      // uncomment below and update the code to test the property birthdate
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property delegationUserId (base name: "delegation_user_id")', function() {
      // uncomment below and update the code to test the property delegationUserId
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property managerId (base name: "manager_id")', function() {
      // uncomment below and update the code to test the property managerId
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property meta (base name: "meta")', function() {
      // uncomment below and update the code to test the property meta
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

    it('should have the property forceChangePassword (base name: "force_change_password")', function() {
      // uncomment below and update the code to test the property forceChangePassword
      //var instance = new ProcessMakerApi.UsersEditable();
      //expect(instance).to.be();
    });

  });

}));
